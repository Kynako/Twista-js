{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "blue",
    "glyph" : "feather-alt"
  },
  "name" : "Twista",
  "script" : "\/*!\n * Twista-js\n *\n * Copyright (c) ©︎ 2021 Kynako\n *\n * This software is released under the MIT license.\n * see https:\/\/github.com\/Kynako\/Twista-js\/blob\/main\/LICENSE\n *\/\nclass Twista {\n  constructor(env, hasher){\n    this.CK = env.CK;\n    this.CS = env.CS;\n    this.AT = null || env.AT;\n    this.AS = null || env.AS;\n    this.BT = null || env.BT;\n    this.hasher = hasher;\n    this.baseUrl = {\n      rest: 'https:\/\/api.twitter.com\/1.1\/',\n      media: 'https:\/\/upload.twitter.com\/1.1\/'\n    };\n  };\n  \n  async requestJson(method, endpoint, param, base='rest'){\n    const raw_url = this.baseUrl[base] + endpoint;\n    const req_url = method == 'GET'\n      ? this.baseUrl[base]\n        + endpoint\n        + '?'\n        + this._buildParamString(param)\n      : this.baseUrl[base] + endpoint;\n    let req_body = method == 'GET'\n      ? null\n      : this._buildParamString(param);\n    const r = new Request(req_url);\n    const authHeader = await this._getAuthHeader(\n      method, raw_url, param\n    );\n    r.method = method.toUpperCase();\n    r.headers = {\n      ...authHeader,\n      \"Content-Type\": \"application\/x-www-form-urlencoded\"\n    };\n    r.body = req_body;\n    const json = await r.loadJSON();\n    return {\n      json: json,\n      response: r.response\n    }; \n  };\n    \n  async uploadImage(image,  param={}){\n    const req_url = this.baseUrl['media'] + 'media\/upload.json';\n    const r = new Request(req_url);\n    r.method = 'POST';\n    const authHeader = await this._getAuthHeader(\n      'POST', req_url, param\n    );\n    r.headers = {\n      \"Content-Type\": \"multipart\/form-data\",\n      ...authHeader\n    };\n    r.addImageToMultipart(image, \"media\");\n    for (key in param){\n      r.addParameterToMultipart(key, param[key])\n    };\n    return r.loadJSON();\n  };\n\n  _buildParamString(param){\n    return Object.keys(param)\n      .sort()\n      .map(key=>{\n        return this._rfc3986(key) + '=' + this._rfc3986(param[key]);\n    }).join('&');\n  };\n  \n  async _getAuthHeader(method, url, param){\n    const oauthBaseParam = {\n      oauth_consumer_key: this.CK,\n      oauth_token: this.AT,\n      oauth_nonce: await this._nonce(),\n      oauth_timestamp: this._unix(),\n      oauth_signature_method: 'HMAC-SHA1',\n      oauth_version: '1.0'\n    };\n    const oauthParam = {\n      ...param, ...oauthBaseParam\n    };\n    const signature = this._generateSignature(\n      method, url, oauthParam\n    );\n    const oauthParamWithSign = {\n      ...oauthParam,\n      ...{ oauth_signature: signature }\n    };\n    const authString = 'OAuth ' + Object.keys(oauthParamWithSign).sort().map(key=>{\n      return this._rfc3986(key) + '=' + this._rfc3986(oauthParamWithSign[key]);\n    }).join(', ');\n    return {'Authorization': authString};\n  };\n  \n  _generateSignature(method, url, param){\n    const signBaseKey = [\n      this._rfc3986(this.CS),\n      this._rfc3986(this.AS)\n    ].join('&');\n    const paramString = this._buildParamString(param);\n    const signBaseData = [\n      this._rfc3986(method),\n      this._rfc3986(url),\n      this._rfc3986(paramString)\n    ].join('&');\n    const signature = this.hasher(\n      signBaseData,\n      signBaseKey\n    );\n    return signature;\n  };\n\n  \/\/ MDN Web Docs: encodeURIComponent()\n  \/\/ https:\/\/developer.mozilla.org\/ja\/docs\/Web\/JavaScript\/Reference\/Global_Objects\/encodeURIComponent\n  _rfc3986(str){\n    return encodeURIComponent(str).replace(\/[!'()*]\/g, function(c) {\n      return '%' + c.charCodeAt(0).toString(16);\n    });\n  };\n  \n  async _nonce(){\n    const wv = new WebView();\n    const n = await wv.evaluateJavaScript(`\n\t  const array = new Uint32Array(1);\n\t  crypto.getRandomValues(array);\n\t  completion(array[0]);\n    `, true\n    );\n    return n.toString()\n  };\n  \n  _unix(){\n\tconst date = new Date();\n\treturn Math.floor(date.getTime()\/1000);\n  };\n};\n\nmodule.exports = Twista;\n",
  "share_sheet_inputs" : [

  ]
}